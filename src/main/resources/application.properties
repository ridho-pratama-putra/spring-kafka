server.port=8082
spring.graphql.graphiql.enabled=false
spring.application.name=Music Recommendation
#local deployment & local database
#spring.data.mongodb.uri=${MONGODB_PREFIX_URL}://${MONGODB_CLUSTER}

#local deployment & remote database / run local
spring.data.mongodb.uri=${MONGODB_URI}
spring.data.mongodb.database=${MONGODB_DATABASE}
#mongodb+srv://musicLibrary:<password>@cluster0.kut8aym.mongodb.net/?retryWrites=true&w=majority

management.endpoints.web.exposure.include=*
management.endpoint.health.show-components=always
management.endpoint.health.show-details=always
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true

#without set info env to true, info wont show anything just {}
management.info.env.enabled=true
info.application.name= ${spring.application.name}
info.application.description=Spring Boot application with Kafka & MongoDB
info.application.version='@project.version@'
info.application.spring-cloud-version='@spring-cloud.version@'
info.application.spring-boot-version='@project.parent.version@'

# Required connection configs for Kafka producer, consumer, and admin
spring.kafka.producer.client-id=SPRING-KAFKA-MUSIC-RECOMMENDATION
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.properties.bootstrap.servers=https://${BROKER_ENDPOINT}
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username='${CLUSTER_API_KEY}' password='${CLUSTER_API_SECRET}';
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Best practice for higher availability in Apache Kafka clients prior to 3.0
spring.kafka.properties.session.timeout.ms=45000

# Required connection configs for Confluent Cloud Schema Registry
spring.kafka.properties.basic.auth.credentials.source=USER_INFO
spring.kafka.properties.basic.auth.user.info=${CLUSTER_API_KEY}:${CLUSTER_API_SECRET}
spring.kafka.properties.schema.registry.url=https://${BROKER_ENDPOINT}

spring.zipkin.enabled=false
spring.zipkin.base-url=http://localhost:9411